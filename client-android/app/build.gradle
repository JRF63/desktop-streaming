plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.debug.myapplication"
        minSdk 23
        targetSdk 32
        ndkVersion "23.1.7779620"
        ndk {
            abiFilters 'x86_64', 'arm64-v8a'
        }
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

task cargo {
    // https://stackoverflow.com/questions/56659660/gradle-only-execute-a-task-if-code-in-a-directory-has-changed
    // exec {
    //     workingDir '/src/main/rust/builder'
    //     commandLine 'cargo', 'run', '--', '../native', 'x86_64', '23'
    // }
//    println 'Hi'
//    println android
//    println android.applicationVariants
//    android.applicationVariants.all { variant ->
//        println variant.mergedFlavor.renderscriptNdkModeEnabled
//    }

//    android.applicationVariants.all { variant ->
//
//        println variant.mergedFlavor.minSdkVersion.apiLevel
//        println variant.mergedFlavor
//        variant.outputs.each { output ->
//            def abi = output.getFilter(com.android.build.OutputFile.ABI)
//            def flavor = variant.productFlavors.name
//            println abi
//            println flavor
//        }
//    }
}

build.dependsOn cargo